% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/purify_regions.R
\name{purify_regions}
\alias{purify_regions}
\title{Purify Regions.}
\usage{
purify_regions(
  these_regions = NULL,
  qchrom = NULL,
  qstart = NULL,
  qend = NULL,
  projection = "hg38"
)
}
\arguments{
\item{these_regions}{The region(s) to be queried. Can be a data frame with
regions with the following columns; chrom, start, end.
Or in a string in the following format chr:start-end.}

\item{qchrom}{Query chromosome (prefixed or un-prefixed),
Required if `these_regions` is not provided.}

\item{qstart}{Query start position. Required if `these_regions` is not provided.}

\item{qend}{Query end position. Required if `these_regions` is not provided.}

\item{projection}{The desired projection you want back coordinates for.
Available projections are hg38 and grch37. Default is hg38.}
}
\value{
A data table with three columns, chrom, start, end.
}
\description{
Helper function for cleaning and standardize regions.
}
\details{
This function accepts a variety of incoming regions.
Either, regions can be provided as a data frame with `these_regions`.
If so, the following columns must exist; chrom, start, end.
This parameter (`these_regions`) also accept a region in "region" format,
(i.e chr:start-end). This can be a region or a vector of characters with
multiple regions. The user can also individually specify region(s) with;
`qchrom` (string), `qstart` (string, or integer), and `qend` (string or integer).
These parameters can also accept a vector of characters for multiple regions.
The function also handles chromosome prefixes in the returned object,
based on the selected `projection`. In addition, this function also checks if
the provided start coordinate is equal or greater to the end coordinate for 
the same chromosome. It also ensures that specified ranges are within the 
actual chromosomal range.
}
\examples{
#Example 1 - Give the function one region as a string
my_region = purify_regions(these_regions = "chr1:100-500")

#Example 2 - Give the function multiple regions as a string
my_regions = purify_regions(these_regions = c("chr1:100-500", "chr2:100-500"),
                            projection = "grch37")

#Example 3 - Individually specify the chromosome, start and end coordinates
this_region = purify_regions(qchrom = "chr1",
                             qstart = 100,
                             qend = 500)

#Example 4 - Individually specify multiple regions with the query parameters
these_regions = purify_regions(qchrom = c("chr1", "chr2"),
                               qstart = c(100, 200),
                               qend = c(500, 600),
                               projection = "grch37")

}
